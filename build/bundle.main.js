(()=>{"use strict";var e={100:(e,t,n)=>{n.d(t,{A:()=>s});var r=n(354),o=n.n(r),a=n(314),i=n.n(a)()(o());i.push([e.id,'html[data-theme=light]{--bg-color: #e4f0fa;--primary: #ff7c7c;--dk-text: #2b3c5b;--dk-subtext: #7a8aa3;--card: #e6eef8;--component-s: #c4cdd1;--component: #d3dee3;--grad-base: rgb(250, 177, 135);--gradient-1: rgb(250, 177, 135);--gradient-2: rgb(246, 117, 117);--cal-indicator: invert(72%) sepia(40%) saturate(5103%) hue-rotate(314deg) brightness(110%) contrast(105%);--selectedFilterBg: rgb(211, 222, 227)}html[data-theme=dark]{--bg-color: #121215;--primary: #8d8fd2;--dk-text: #dfe0fb;--dk-subtext: #84849d;--card: #18181c;--component-s: #454254;--component: #2f2d36;--grad-base: rgb(125, 90, 242);--gradient-1: rgb(145, 114, 247);--gradient-2: rgb(104, 61, 247);--cal-indicator: invert(57%) sepia(96%) saturate(184%) hue-rotate(200deg) brightness(85%) contrast(93%);--selectedFilterBg: rgb(47, 45, 54)}*{margin:0;padding:0;box-sizing:border-box;font-family:"Lexend Deca",sans-serif;font-weight:400;transition:.3s color ease;transition:.3s background-color ease}body{color:var(--dk-subtext);background-color:var(--bg-color)}h2,label{font-size:20px}a{color:var(--dk-subtext)}input,select,textarea{border:none;border-radius:10px;padding:0 10px;outline-width:0;background-color:var(--component);color:var(--dk-text);resize:none;height:35px;transition:.2s ease-out}select{height:35px;width:100%;padding:0 10px}header{padding:0 10vw;height:130px;display:flex;align-items:center;justify-content:center}header div{width:510px}@keyframes slideFromRight{from{transform:translateX(0)}to{transform:translateX(120%)}}@keyframes slideFromLeft{from{transform:translateX(-120%)}to{transform:translateX(0)}}@keyframes slideFromTop{from{transform:translateY(-120%)}to{transform:translateY(0)}}@keyframes showIn{from{transform:scale(0.9)}to{transform:scale(1)}}#app{min-height:100vh}#fnote{height:15vh;padding:10px;overflow-y:auto;resize:none}#fdate{width:100%;padding:0 5px 0 10px}#theme{color:var(--component-s);font-size:24px;transition:.2s ease-in-out}#theme:hover{color:var(--primary);font-size:24px}.title{font-size:48px;width:285px;color:var(--dk-text)}.title span{color:var(--grad-base)}.buger{display:none}.cards{display:flex;justify-content:center;flex-wrap:nowrap;gap:24px;padding:0 8vw}.sidebar,.content{user-select:none;border-radius:24px;background-color:var(--card);height:50vh;box-shadow:rgba(0,0,0,.2) 0px 12px 28px 0px,rgba(0,0,0,.1) 0px 2px 4px 0px}.sidebar{width:270px;padding:24px;display:flex;flex-direction:column}.sidebar .filters{margin-bottom:40px}.sidebar .filters__title{display:flex;align-items:center}.subtitle{justify-content:space-between;color:var(--primary);padding:0;margin-bottom:14px;cursor:auto}.filter{display:flex;align-items:center;color:var(--dk-subtext);padding:8px;margin-bottom:8px;border-radius:8px;cursor:pointer;transition:.2s ease-in-out}.filter i{margin-right:6px;font-variation-settings:"FILL" 1,"wght" 300,"GRAD" 200,"opsz" 48}.filter p{font-size:24px;color:var(--component-s);transition:.3s ease;cursor:pointer}.filter p:hover{color:var(--primary)}.projects{flex:1;display:flex;flex-direction:column;overflow:auto}.projects__title{display:flex;align-items:center;justify-content:space-between;overflow:hidden}.projects__list{width:100%;overflow-x:hidden}.projects__list__project{display:flex;align-items:center;height:32px;padding:8px;overflow:hidden;opacity:1;border-radius:8px;margin-bottom:8px;cursor:pointer}.projects__list__project i:first-child{font-size:16px;margin-right:8px;font-variation-settings:"FILL" 1,"wght" 300,"GRAD" 200,"opsz" 48}.projects__list__project p{width:10vw;overflow-x:hidden;font-size:14px;display:flex;color:var(--dk-subtext)}.projects__list__project p:hover{color:var(--dk-subtext)}.projects__list__project-btns{margin-left:auto;display:flex}.projects__list__project-btns .edit-p{margin-right:8px;transition:.2s ease-in-out}.projects__list__project-btns .delete-p{transition:.2s ease-in-out;margin-right:0;font-variation-settings:"FILL" 1,"wght" 300,"GRAD" 200,"opsz" 48;font-size:16px}.projects__list__project-btns .edit-p:hover{color:var(--primary);transform:scale(1.2)}.projects__list__project-btns .delete-p:hover{color:var(--primary);transform:scale(1.2)}.projects__list__project:hover .edit-p{opacity:1}.projects__list__project:hover .delete-p{opacity:1}.projects__list__formProject{transform:.2s ease-in-out}.projects__list__formProject input{width:100%;height:32px;padding:8px;border-radius:8px}.github{display:flex;justify-content:center}.options{opacity:0;font-variation-settings:"FILL" 1,"wght" 300,"GRAD" 200,"opsz" 48}.selectedFilter{transition:.3s background-color ease;background-color:var(--selectedFilterBg)}.material-symbols-rounded{font-size:18px;font-variation-settings:"FILL" 1,"wght" 300,"GRAD" 200,"opsz" 48}.fa-star{padding:1px;width:18px}.fa-solid.fa-plus.plus{font-size:24px;color:var(--component-s);transition:.5s ease;cursor:pointer}.fa-solid.fa-plus.plus:hover{color:var(--primary);transform:scale(1.12)}.fa-solid.fa-plus.rotated{transform:scale(1.12);font-size:24px;color:var(--component-s);transform:rotate(45deg);transition:.5s ease;cursor:pointer}.fa-solid.fa-plus.rotated:hover{color:var(--primary)}.fa-brands.fa-github{transition:.3s ease;font-size:25px}.fa-brands.fa-github:hover{color:var(--primary)}.content{width:510px;padding:24px;overflow-x:hidden;position:relative}.content__tasks{display:flex;flex-direction:column;height:100%;top:24px}.content__tasks-main{display:flex;flex-direction:column;height:35vh;overflow-x:hidden;padding:2px}.content__tasks-main__task{cursor:pointer;display:flex;align-items:center;z-index:0;border-radius:10px;height:35px;width:99.5%;margin-bottom:8px;min-width:0;padding-right:10px;transition:.2s ease-out;background-color:var(--component);box-shadow:rgba(0,0,0,.05) 0px 4px 4px 0px,rgba(0,0,0,.08) 0px 0px 0px 1px}.content__tasks-main__task-actions,.content__tasks-main__task-checkmark{display:flex;align-items:center}.content__tasks-main__task-title{height:35px;width:75%;padding-right:8px;border:none;line-height:35px;font-size:14px;font-weight:300;pointer-events:none;color:var(--dk-text);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.content__tasks-main__task-checkmark{margin:auto 0;height:32px}.content__tasks-main__task-checkmark input{margin-right:1vw;display:none}.content__tasks-main__task-checkmark i{display:flex;align-items:center;height:32px;padding:0 14px}.content__tasks-main__task-actions{margin-left:auto}.content__tasks-main__task-actions .options:first-child{width:30px;display:flex;justify-content:center}.content__tasks-main__task-actions .fa-star{opacity:0}.content__tasks-main__task-actions .edit:hover{transform:scale(1.25);color:var(--primary)}.content__tasks-main__task-actions .delete:hover{transform:scale(1.25);color:var(--primary)}.content__tasks-main__task:hover{background-color:var(--component-s)}.content__tasks-main__task:hover .options{opacity:1}.content__tasks-main__task:hover i{opacity:1}.content__tasks-main__not-found{color:var(--dk-subtext);display:flex;justify-content:center;margin-top:16px;font-size:18px}.content__task{display:none;flex-direction:column}.content__task-head{display:flex;margin-bottom:24px}.content__task-head i{font-size:20px;margin-right:6px}.content__task-title-head{display:flex;justify-content:space-between;margin:8px 16px}.content__task-title-head__title{transition:.2s ease-out;font-size:18px;color:var(--dk-text);width:90%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.content__task-title-head i{color:var(--primary);font-size:24px}.content__task-main{margin:8px 16px 0 16px}.content__task-main hr{height:4px;background:var(--primary);border:none;border-radius:2px}.content__task-main p{color:var(--dk-subtext);font-size:16px;white-space:pre-line;height:27vh;overflow:auto;padding-top:8px}.content__task-footer{display:flex;align-items:center;justify-content:space-between;margin-top:auto;padding:0 16px 8px 8px}.content__task-footer button{background-color:var(--card);border:none;color:var(--dk-text);font-size:30px}.content__task-footer p{color:var(--primary);font-weight:500}.content-button{cursor:pointer;margin-top:auto;width:130px;height:40px;border-radius:24px;border:none;margin-left:auto;font-size:16px;color:var(--dk-text);background:var(--grad-base);background:linear-gradient(160deg, var(--gradient-1) 0%, var(--gradient-2) 100%);transition:.2s ease-out;box-shadow:rgba(0,0,0,.15) 5px 5px 15px 0px}.content-button:hover{transform:scale(1.02)}.content__form{display:none;height:100%}.content__form-add-task{width:100%;display:flex;flex-direction:column}.content__form-add-task .subtitle{margin-top:24px}.content__form-add-task__title{margin-top:0 !important}.content__form-add-task__add{display:flex;align-items:center;justify-content:space-between;gap:16px}.content__form-add-task__add-projects,.content__form-add-task__add-date{width:45%}.content__form-add-task__buttons{margin-top:auto;display:flex}.content__form .add-star.fa-regular.fa-star,.content__form .add-star.fa-solid.fa-star{font-size:20px;color:var(--primary);transition:.3s ease;margin-top:70px;margin-bottom:6px}.content__form .add-star.fa-regular.fa-star:hover{transform:scale(1.1)}.content__form .add-star.fa-solid.fa-star:hover{transform:scale(1.3)}.content__form .back-btn.fa-sharp.fa-solid.fa-chevron-left{background-color:var(--card);border:none;color:var(--dk-text);font-size:30px;cursor:pointer}@media(max-width: 480px){.sidebar{display:none;position:absolute;left:20%;top:20%;z-index:100;height:70vh}.content{height:70vh}.cards,.sidebar,.filter,.project{font-size:13px}.subtitle h2{font-size:16px}header{justify-content:space-between}header div{display:none}.options{opacity:1}.burger{display:block;width:auto;margin-right:30px}.burger span{position:absolute;display:block;width:25px;height:3px;background:var(--component);background-color:var(--primary);border-radius:1px;transition:all .2s cubic-bezier(0.1, 0.82, 0.76, 0.965)}.burger span:first-child{transform:translateY(5px)}.burger span:last-child{transform:translateY(-5px)}}',"",{version:3,sources:["webpack://./src/scss/style.scss"],names:[],mappings:"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",sourcesContent:["html[data-theme='light'] {\r\n    --bg-color: #e4f0fa;\r\n    --primary: #ff7c7c;\r\n    --dk-text: #2b3c5b;\r\n    --dk-subtext: #7a8aa3;\r\n    --card: #e6eef8;\r\n    --component-s: #c4cdd1;\r\n    --component: #d3dee3;\r\n    --grad-base: rgb(250, 177, 135);\r\n    --gradient-1: rgb(250, 177, 135);\r\n    --gradient-2: rgb(246, 117, 117);\r\n    --cal-indicator: invert(72%) sepia(40%) saturate(5103%) hue-rotate(314deg)\r\n      brightness(110%) contrast(105%);\r\n      --selectedFilterBg: rgb(211, 222, 227);\r\n}\r\nhtml[data-theme='dark'] {\r\n    --bg-color: #121215;\r\n    --primary: #8d8fd2;\r\n    --dk-text: #dfe0fb;\r\n    --dk-subtext: #84849d;\r\n    --card: #18181c;\r\n    --component-s: #454254;\r\n    --component: #2f2d36;\r\n    --grad-base: rgb(125, 90, 242);\r\n    --gradient-1: rgb(145, 114, 247);\r\n    --gradient-2: rgb(104, 61, 247);\r\n    --cal-indicator: invert(57%) sepia(96%) saturate(184%) hue-rotate(200deg)\r\n    brightness(85%) contrast(93%);\r\n    --selectedFilterBg: rgb(47, 45, 54);\r\n}\r\n//---------------------------------------------------\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Lexend Deca', sans-serif;\r\n    font-weight: 400;\r\n    transition: 0.3s color ease;\r\n    transition: 0.3s background-color ease;\r\n  }\r\nbody{\r\n    color: var(--dk-subtext);\r\n    background-color: var(--bg-color);    \r\n}\r\nh2,\r\nlabel{\r\n    font-size: 20px;\r\n}\r\na{\r\n    color: var(--dk-subtext);\r\n}\r\ninput, select, textarea{\r\n    border: none;\r\n    border-radius: 10px;\r\n    padding: 0 10px;\r\n    outline-width: 0;\r\n    background-color: var(--component);\r\n    color: var(--dk-text);\r\n    resize: none;\r\n    height: 35px;\r\n    transition: 0.2s ease-out;\r\n}\r\nselect{\r\n    height: 35px;\r\n    width: 100%;\r\n    padding: 0 10px;\r\n}\r\nheader{\r\n    padding: 0 10vw;\r\n    height: 130px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    div{\r\n        width: 510px;\r\n    }\r\n}\r\n\r\n//---------------------------------------------------\r\n\r\n@mixin flex-center {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n@keyframes slideFromRight {\r\n    from {\r\n      transform: translateX(0);\r\n    }\r\n    to {\r\n      transform: translateX(120%);\r\n    }\r\n}\r\n@keyframes slideFromLeft {\r\n    from {\r\n      transform: translateX(-120%);\r\n    }\r\n    to {\r\n      transform: translateX(0);\r\n    }\r\n}\r\n@keyframes slideFromTop {\r\n    from {\r\n      transform: translateY(-120%);\r\n    }\r\n    to {\r\n      transform: translateY(0);\r\n    }\r\n}\r\n@keyframes showIn {\r\n    from {\r\n      transform: scale(0.9);\r\n    }\r\n    to {\r\n      transform: scale(1);\r\n    }\r\n}\r\n\r\n//---------------------------------------------------\r\n\r\n#app{\r\n    min-height: 100vh;\r\n}\r\n#fnote{\r\n    height: 15vh;\r\n    padding: 10px;\r\n    overflow-y: auto;\r\n    resize: none;\r\n}\r\n#fdate{\r\n    width: 100%;\r\n    padding: 0 5px 0 10px;\r\n}\r\n#theme{\r\n    color: var(--component-s);\r\n    font-size: 24px;\r\n    transition: 0.2s ease-in-out;\r\n}\r\n#theme:hover{\r\n    color: var(--primary);\r\n    font-size: 24px;\r\n}\r\n\r\n//---------------------------------------------------\r\n\r\n.title{\r\n    font-size: 48px;\r\n    width: 285px;\r\n    color: var(--dk-text);\r\n\r\n    span{\r\n        color: var(--grad-base)\r\n    }\r\n}\r\n.buger{\r\n    display: none;\r\n}\r\n\r\n//---------------------------------------------------\r\n\r\n.cards{\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: nowrap;\r\n    gap: 24px;\r\n    padding: 0 8vw;\r\n}\r\n.sidebar,\r\n.content{\r\n    user-select: none;\r\n    border-radius: 24px;\r\n    background-color: var(--card);\r\n    height: 50vh;\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 28px 0px, rgba(0, 0, 0, 0.1) 0px 2px 4px 0px;\r\n}\r\n.sidebar{\r\n    width: 270px;\r\n    padding: 24px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .filters{\r\n        margin-bottom: 40px;\r\n    }\r\n    .filters__title{\r\n        @include flex-center;\r\n    }\r\n}\r\n.subtitle{\r\n    justify-content: space-between;\r\n    color: var(--primary);\r\n    padding: 0;\r\n    margin-bottom: 14px;\r\n    cursor: auto;\r\n}\r\n.filter{\r\n    @include flex-center;\r\n    color: var(--dk-subtext);\r\n    padding: 8px;\r\n    margin-bottom: 8px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: 0.2s ease-in-out;\r\n\r\n    i{\r\n        margin-right: 6px;\r\n        font-variation-settings: 'FILL' 1, 'wght' 300, 'GRAD' 200, 'opsz' 48;\r\n    }\r\n    p{\r\n        font-size: 24px;\r\n        color: var(--component-s);\r\n        transition: 0.3s ease;\r\n        cursor: pointer;\r\n    }\r\n    p:hover{\r\n        color: var(--primary);\r\n    }\r\n}\r\n.projects{\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: auto;\r\n\r\n    &__title{\r\n        @include flex-center;\r\n        justify-content: space-between;\r\n        overflow: hidden;\r\n    }\r\n    &__list{\r\n        width: 100%;\r\n        overflow-x: hidden;\r\n        \r\n        &__project{\r\n            @include flex-center;\r\n            height: 32px;\r\n            padding: 8px;\r\n            overflow: hidden;\r\n            opacity: 1;\r\n            border-radius: 8px;\r\n            margin-bottom: 8px;\r\n            cursor: pointer;\r\n\r\n            i:first-child{\r\n                font-size: 16px;\r\n                margin-right: 8px;\r\n                font-variation-settings: 'FILL' 1, 'wght' 300, 'GRAD' 200, 'opsz' 48;\r\n            }\r\n            p{\r\n                width: 10vw;\r\n                overflow-x: hidden;\r\n                font-size: 14px;\r\n                display: flex;\r\n                color: var(--dk-subtext);\r\n            }\r\n            p:hover{\r\n                color: var(--dk-subtext);\r\n            }\r\n            &-btns{\r\n                margin-left: auto;\r\n                display: flex;\r\n                \r\n                .edit-p{\r\n                    margin-right: 8px;\r\n                    transition: 0.2s ease-in-out;\r\n                }\r\n                .delete-p{\r\n                    transition: 0.2s ease-in-out;\r\n                    margin-right: 0;\r\n                    font-variation-settings: 'FILL' 1, 'wght' 300, 'GRAD' 200, 'opsz' 48;\r\n                    font-size: 16px;\r\n                }\r\n                .edit-p:hover{\r\n                    color: var(--primary);\r\n                    transform: scale(1.2);\r\n                }\r\n                .delete-p:hover{\r\n                    color: var(--primary);\r\n                    transform: scale(1.2);\r\n                }\r\n            }\r\n        }\r\n        &__project:hover .edit-p{\r\n            opacity: 1;\r\n        }\r\n        &__project:hover .delete-p{\r\n            opacity: 1;\r\n        }\r\n        &__formProject{\r\n            transform: 0.2s ease-in-out;\r\n\r\n            input{\r\n                width: 100%;\r\n                height: 32px;\r\n                padding: 8px;\r\n                border-radius: 8px;\r\n            }\r\n        }\r\n    }\r\n}\r\n.github{\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n//---------------------------------------------------\r\n\r\n.options{\r\n    opacity: 0;\r\n    font-variation-settings: 'FILL' 1, 'wght' 300, 'GRAD' 200, 'opsz' 48;\r\n}\r\n.selectedFilter{\r\n    transition: 0.3s background-color ease;\r\n    background-color: var(--selectedFilterBg);\r\n}\r\n\r\n//---------------------------------------------------\r\n\r\n.material-symbols-rounded{\r\n    font-size: 18px;\r\n    font-variation-settings: 'FILL' 1, 'wght' 300, 'GRAD' 200, 'opsz' 48;\r\n}\r\n.fa-star{\r\n    padding: 1px;\r\n    width: 18px;\r\n}\r\n.fa-solid.fa-plus.plus{\r\n    font-size: 24px;\r\n    color: var(--component-s);\r\n    transition: 0.5s ease;\r\n    cursor: pointer;\r\n}\r\n.fa-solid.fa-plus.plus:hover{\r\n    color: var(--primary);\r\n    transform: scale(1.12);\r\n}\r\n.fa-solid.fa-plus.rotated{\r\n    transform: scale(1.12);\r\n    font-size: 24px;\r\n    color: var(--component-s);\r\n    transform: rotate(45deg);\r\n    transition: 0.5s ease;\r\n    cursor: pointer;\r\n}\r\n.fa-solid.fa-plus.rotated:hover{\r\n    color: var(--primary);\r\n}\r\n.fa-brands.fa-github{\r\n    transition: 0.3s ease;\r\n    font-size: 25px;\r\n}\r\n.fa-brands.fa-github:hover{\r\n    color: var(--primary);\r\n}\r\n\r\n//---------------------------------------------------\r\n\r\n.content{\r\n    width: 510px;\r\n    padding: 24px;\r\n    overflow-x: hidden;\r\n    position: relative;\r\n    \r\n    &__tasks{\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        top: 24px;\r\n\r\n        &-main{\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 35vh;\r\n            overflow-x: hidden;\r\n            padding: 2px;\r\n\r\n            &__task{\r\n                cursor: pointer;\r\n                @include flex-center;\r\n                z-index: 0;\r\n                border-radius: 10px;\r\n                height: 35px;\r\n                width: 99.5%;\r\n                margin-bottom: 8px;\r\n                min-width: 0;\r\n                padding-right: 10px;\r\n                transition: 0.2s ease-out;\r\n                background-color: var(--component);\r\n                box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 4px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;\r\n                \r\n                &-actions,\r\n                &-checkmark{\r\n                    @include flex-center;\r\n                }\r\n                &-title{\r\n                    height: 35px;\r\n                    width: 75%;\r\n                    padding-right: 8px;\r\n                    border: none;\r\n                    line-height: 35px;\r\n                    font-size: 14px;\r\n                    font-weight: 300;\r\n                    pointer-events: none;\r\n                    color: var(--dk-text);\r\n                    overflow: hidden;\r\n                    white-space: nowrap;\r\n                    text-overflow: ellipsis;\r\n                }\r\n                &-checkmark{\r\n                    margin: auto 0;\r\n                    height: 32px;\r\n\r\n                    input{\r\n                        margin-right: 1vw;\r\n                        display: none;\r\n                    }\r\n                    i{\r\n                        @include flex-center;\r\n                        height: 32px;\r\n                        padding: 0 14px;\r\n                    }\r\n                }\r\n                &-actions{\r\n                    margin-left: auto;\r\n\r\n                    .options:first-child{\r\n                        width: 30px;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                    }\r\n                    .fa-star{\r\n                        opacity: 0;\r\n                    }\r\n                    .edit:hover{\r\n                        transform: scale(1.25);\r\n                        color: var(--primary);\r\n                    }\r\n                    .delete:hover{\r\n                        transform: scale(1.25);\r\n                        color: var(--primary);\r\n                    }\r\n                }\r\n            }\r\n            &__task:hover{\r\n                background-color: var(--component-s);\r\n    \r\n                .options{\r\n                    opacity: 1;\r\n                }\r\n            }\r\n            &__task:hover i{\r\n                opacity: 1;\r\n            }\r\n            &__not-found{\r\n                color: var(--dk-subtext);\r\n                display: flex;\r\n                justify-content: center;\r\n                margin-top: 16px;\r\n                font-size: 18px;\r\n            }\r\n        }\r\n    }\r\n    &__task{\r\n        display: none;\r\n        flex-direction: column;\r\n\r\n        &-head{\r\n            display: flex;\r\n            margin-bottom: 24px;\r\n\r\n            i{\r\n                font-size: 20px;\r\n                margin-right: 6px;\r\n            }\r\n        }\r\n        &-title-head{\r\n            display: flex;\r\n            justify-content: space-between;\r\n            margin: 8px 16px;\r\n\r\n            &__title{\r\n                transition: 0.2s ease-out;\r\n                font-size: 18px;\r\n                color: var(--dk-text);\r\n                width: 90%;\r\n                white-space: nowrap;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n            }\r\n            i{\r\n                color: var(--primary);\r\n                font-size: 24px;\r\n            }\r\n        }\r\n        &-main{\r\n            margin: 8px 16px 0 16px;\r\n\r\n            hr{\r\n                height: 4px;\r\n                background: var(--primary);\r\n                border: none;\r\n                border-radius: 2px;\r\n            }\r\n            p{\r\n                color: var(--dk-subtext);\r\n                font-size: 16px;\r\n                white-space: pre-line;\r\n                height: 27vh;\r\n                overflow: auto;\r\n                padding-top: 8px;\r\n            }\r\n        }\r\n        &-footer{\r\n            @include flex-center;\r\n            justify-content: space-between;\r\n            margin-top: auto;\r\n            padding: 0 16px 8px 8px;\r\n\r\n            button{\r\n                background-color: var(--card);\r\n                border: none;\r\n                color: var(--dk-text);\r\n                font-size: 30px;\r\n            }\r\n            p{\r\n                color: var(--primary);\r\n                font-weight: 500;\r\n            }\r\n        }\r\n    }\r\n    &-button{\r\n        cursor: pointer;\r\n        margin-top: auto;\r\n        width: 130px;\r\n        height: 40px;\r\n        border-radius: 24px;\r\n        border: none;\r\n        margin-left: auto;\r\n        font-size: 16px;\r\n        color: var(--dk-text);\r\n        background: var(--grad-base);\r\n        background: linear-gradient(160deg, var(--gradient-1) 0%, var(--gradient-2) 100%);\r\n        transition: 0.2s ease-out;\r\n        box-shadow: rgba(0, 0, 0, 0.15) 5px 5px 15px 0px;\r\n    }\r\n    &-button:hover{\r\n        transform: scale(1.02);\r\n    }\r\n//-----------------------------------------\r\n    &__form{\r\n        display: none;\r\n        height: 100%;\r\n        \r\n        &-add-task{\r\n            width: 100%;\r\n            display: flex;\r\n            flex-direction: column;\r\n\r\n            .subtitle{\r\n                margin-top: 24px;\r\n            }\r\n            &__title{\r\n                margin-top: 0!important;\r\n            }\r\n            &__add{\r\n                @include flex-center;\r\n                justify-content: space-between;\r\n                gap: 16px;\r\n        \r\n                &-projects,\r\n                &-date{\r\n                    width: 45%;\r\n                }\r\n            }\r\n            &__buttons{\r\n                margin-top: auto;\r\n                display: flex;\r\n            }\r\n        }\r\n        .add-star.fa-regular.fa-star,\r\n        .add-star.fa-solid.fa-star{\r\n            font-size: 20px;\r\n            color: var(--primary);\r\n            transition: 0.3s ease;\r\n            margin-top: 70px;\r\n            margin-bottom: 6px;\r\n        }\r\n        .add-star.fa-regular.fa-star:hover{\r\n            transform: scale(1.1);\r\n        }\r\n        .add-star.fa-solid.fa-star:hover{\r\n            transform: scale(1.3);\r\n        }\r\n        .back-btn.fa-sharp.fa-solid.fa-chevron-left{\r\n            background-color: var(--card);\r\n            border: none;\r\n            color: var(--dk-text);\r\n            font-size: 30px;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n}\r\n\r\n//---------------------------------------------------\r\n\r\n@media (max-width: 480px) {\r\n    .sidebar{\r\n        display: none;\r\n        position: absolute;\r\n        left: 20%;\r\n        top: 20%;\r\n        z-index: 100;\r\n        height: 70vh;\r\n    }\r\n    .content{\r\n        height: 70vh;\r\n    }\r\n    .cards, .sidebar, .filter, .project {\r\n        font-size: 13px;\r\n    }\r\n    .subtitle h2{\r\n        font-size: 16px;\r\n    }\r\n    header {\r\n        justify-content: space-between;\r\n\r\n        div{\r\n            display: none;\r\n        }\r\n    }\r\n    .options{\r\n        opacity: 1;\r\n    }\r\n    .burger{\r\n        display: block;\r\n        width: auto;\r\n        margin-right: 30px;\r\n        \r\n        span{\r\n            position: absolute;\r\n            display: block;\r\n            width: 25px;\r\n            height: 3px;\r\n            background: var(--component);\r\n            background-color: var(--primary);\r\n            border-radius: 1px;\r\n            transition: all 0.2s cubic-bezier(0.1, 0.82, 0.76, 0.965);\r\n        }\r\n        span:first-child{\r\n            transform: translateY(5px);\r\n        }\r\n        span:last-child{\r\n            transform: translateY(-5px);\r\n        }\r\n    }\r\n}\r\n"],sourceRoot:""}]);const s=i},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),t.push(c))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var A=e[s],l=r.base?A[0]+r.base:A[0],c=a[l]||0,d="".concat(l," ").concat(c);a[l]=c+1;var p=n(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var f=o(u,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=n(a[i]);t[s].references--}for(var A=r(e,o),l=0;l<a.length;l++){var c=n(a[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}a=A}}},659:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,r(o.key),o)}}function r(t){var n=function(t,n){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}const o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return n=e,r=[{key:"Layout",value:function(){return'\n        <header>\n            <h1 class="title">to<span>do.</span></h1>\n            <div></div>\n            <a class="burger" href="#">\n                <span class="burger__elem"></span>\n                <span class="burger__elem"></span>\n            </a>\n        </header>\n        <div class="cards">\n            <aside class="sidebar">\n                <div class="filters">\n                    <div class="filters__title subtitle">\n                        <h2>Filters</h2>\n                        <p id="theme" class="material-symbols-rounded theme">toggle_on</p>\n                    </div>\n                    <p class="filter all selectedFilter"><i class="material-symbols-rounded">inbox</i> All</p>\n                    <p class="filter fstarred"><i class="fa-solid fa-star"></i> Starred</p>\n                    <p class="filter today"><i class="material-symbols-rounded">today</i> Today</p>\n                    <p class="filter week"><i class="material-symbols-rounded">date_range</i> Week</p>\n                </div>\n                <div class="projects">\n                    <div class="projects__title subtitle">\n                        <h2>Projects</h2>\n                        <i class="fa-solid fa-plus plus"></i>\n                    </div>\n                    <div class="projects__list">\n                        \n                    </div>\n                </div>\n                <div class="github">\n                    <a href="https://github.com/mrsekret/to-do"><i class="fa-brands fa-github"></i></a>\n                </div>\n            </aside>\n\n            <main class="content">\n                <div class="content__tasks">\n                    <div class="content__tasks-head">\n                        <h2 class="content__tasks-head__title subtitle">Tasks</h2>\n                        <span class="content__tasks-head__add"></span>\n                    </div>\n                    <div class="content__tasks-main">\n                        <p class="content__tasks-main__not-found">No tasks found</p>\n                    </div>\n                    <button class="content-button addTaskBtn">Add Task</button>\n                </div>\n                <div class="content__form">\n                    <form class="content__form-add-task">\n                        <label for="fname" class="content__form-add-task__title subtitle">Add task</label>\n                        <input type="text" autocomplete="off" id="fname" name="fname" minlength="3" required>\n                        <label for="fnote" class="content__form-add-task__note subtitle">Note</label>\n                        <textarea id="fnote" placeholder="type here..." spellcheck="false" name="fnote"></textarea>\n                        <div class="content__form-add-task__add">\n                            <div class="content__form-add-task__add-projects">\n                                <label for="fproject" class="content__form-add-task__projects">\n                                    <h2 class="subtitle">Project</h2>\n                                </label>\n                                <select id="fproject" name="fproject">\n                                    <option value="">None</option>\n                                </select>\n                            </div>\n                            <div class="content__form-add-task__add-date">\n                                <label for="fdate" class="content__form-add-task__date subtitle">\n                                    <h2 class="subtitle">Date</h2>\n                                </label>\n                                <input type="date" max="2199-12-31" id="fdate" name="fdate">\n                            </div>\n                            <i class="add-star fa-regular fa-star"></i>\n                        </div>\n                        <div class="content__form-add-task__buttons">\n                            <button class="back-btn fa-sharp fa-solid fa-chevron-left"></button>\n                            <button type="submit" class="content-button addBtn">Add</button>\n                        </div>\n                    </form>\n                </div>\n                <div class="content__task">\n                    \n                </div>\n            </main>\n        </div>\n        '}},{key:"SetLayout",value:function(){document.querySelector("#app").insertAdjacentHTML("beforeend",e.Layout())}}],null&&t(n.prototype,null),r&&t(n,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,s(r.key),r)}}function s(e){var t=function(e,t){if("object"!=a(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:t+""}null===localStorage.getItem("ToDoApp")&&localStorage.setItem("ToDoApp",JSON.stringify({settings:{theme:"dark"},tasks:{},projects:{}}));var A=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)},t=[{key:"saveData",value:function(e){localStorage.setItem("ToDoApp",JSON.stringify(e))}},{key:"setItem",value:function(e,t){var n=JSON.parse(localStorage.getItem("ToDoApp"));n[e]=t,this.saveData(n)}},{key:"setSetting",value:function(e,t){var n=JSON.parse(localStorage.getItem("ToDoApp"));n.settings[e]=t,this.saveData(n)}},{key:"setTask",value:function(e,t){var n=JSON.parse(localStorage.getItem("ToDoApp"));n.tasks[e]=t,this.saveData(n)}},{key:"addTask",value:function(e){var t=JSON.parse(localStorage.getItem("ToDoApp")),n=Object.keys(t.tasks);t.tasks[n.length]=e,this.saveData(t)}},{key:"addProject",value:function(e){var t=JSON.parse(localStorage.getItem("ToDoApp"));t.projects[e.name]=e,this.saveData(t)}},{key:"getItem",value:function(e){return JSON.parse(localStorage.getItem("ToDoApp"))[e]}},{key:"getSetting",value:function(e){return JSON.parse(localStorage.getItem("ToDoApp")).settings[e]}},{key:"getTask",value:function(e){return JSON.parse(localStorage.getItem("ToDoApp")).tasks[e]}},{key:"getProject",value:function(e){return JSON.parse(localStorage.getItem("ToDoApp")).projects[e]}},{key:"getLastTask",value:function(){var e=JSON.parse(localStorage.getItem("ToDoApp")),t=document.querySelectorAll(".content__tasks-main__task"),n=e.tasks,r=Object.keys(n);return 0==r.length?t[0]:t[r.length-1]}},{key:"deleteTask",value:function(e){var t=JSON.parse(localStorage.getItem("ToDoApp"));delete t.tasks[e],this.saveData(t)}},{key:"deleteProject",value:function(e){var t=JSON.parse(localStorage.getItem("ToDoApp"));delete t.projects[e],this.saveData(t)}},{key:"setTheme",value:function(){var e=JSON.parse(localStorage.getItem("ToDoApp")),t=app.querySelector(".theme");document.documentElement.setAttribute("data-theme",e.settings.theme);var n=document.documentElement.getAttribute("data-theme");t.innerHTML="light"==n?"toggle_off":"toggle_on"}}],null&&i(e.prototype,null),t&&i(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();const l=A;function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,p(r.key),r)}}function p(e){var t=function(e,t){if("object"!=c(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}const u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return t=e,n=[{key:"Layout",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Add task",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"None",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"",i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"Add",s=app.querySelectorAll("option"),A=e?"add-star fa-solid fa-star starred":"add-star fa-regular fa-star",l="";return s.forEach((function(e){var t=e.textContent==o;l+='<option value="'.concat(e.value,'" ').concat(t?"selected":"",">").concat(e.textContent,"</option>")})),'\n        <form class="content__form-add-task">\n            <label for="fname" class="content__form-add-task__title subtitle">'.concat(t,'</label>\n            <input type="text" autocomplete="off" id="fname" name="fname" value="').concat(n,'" minlength="3" required>\n            <label for="fnote" class="content__form-add-task__note subtitle">Note</label>\n            <textarea id="fnote" placeholder="type here..." spellcheck="false" name="fnote">').concat(r,'</textarea>\n            <div class="content__form-add-task__add">\n                <div class="content__form-add-task__add-projects">\n                    <label for="fproject" class="content__form-add-task__projects">\n                        <h2 class="subtitle">Project</h2>\n                    </label>\n                    <select id="fproject" name="fproject">\n                        ').concat(l,'\n                    </select>\n                </div>\n                <div class="content__form-add-task__add-date">\n                    <label for="fdate" class="content__form-add-task__date subtitle">\n                        <h2 class="subtitle">Date</h2>\n                    </label>\n                    <input type="date" max="2199-12-31" id="fdate" name="fdate" value="').concat(a,'">\n                </div>\n                <i class="').concat(A,'"></i>\n            </div>\n            <div class="content__form-add-task__buttons">\n                <button class="back-btn fa-sharp fa-solid fa-chevron-left"></button>\n                <button type="submit" class="content-button addBtn">').concat(i,"</button>\n            </div>\n        </form>\n        ")}},{key:"backFn",value:function(t){t.preventDefault(),l.setSetting("formOpened",!1);var n=app.querySelector(".content__tasks"),r=app.querySelector(".content__form"),o=r.querySelector(".add-star");r.innerHTML=e.Layout(!1),app.querySelector(".fa-chevron-left").addEventListener("click",(function(t){e.backFn(t)})),o.classList.remove("fa-solid"),o.classList.remove("fa-regular"),o.classList.add("fa-regular"),r.style.animation="0.1s slideFromLeft ease-out reverse",setTimeout((function(){r.style.display="none",n.style.display="flex",n.style.animation="0.1s slideFromRight ease-out reverse"}),90),setTimeout((function(){n.style.animation="",r.style.animation=""}),350)}},{key:"openFn",value:function(e){e.preventDefault(),l.setSetting("formOpened",!0);var t=app.querySelector(".content__tasks"),n=app.querySelector(".content__form");t.style.animation="0.1s slideFromRight ease-out",setTimeout((function(){t.style.display="none",n.style.display="flex",n.style.animation="0.1s slideFromLeft ease-out"}),90),setTimeout((function(){t.style.animation="",n.style.animation=""}),350)}},{key:"RenderView",value:function(){app.querySelector(".addTaskBtn").addEventListener("click",(function(t){e.openFn(t)})),app.querySelector(".fa-chevron-left").addEventListener("click",(function(t){e.backFn(t)}))}}],null&&d(t.prototype,null),n&&d(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,C(r.key),r)}}function y(e,t,n){return t&&m(e.prototype,t),n&&m(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function C(e){var t=function(e,t){if("object"!=f(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=f(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==f(t)?t:t+""}const v=y((function e(t,n,r,o,a,i,s){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.note=n,this.project=r,this.date=o,this.styleDate=a,this.starred=i,this.status=s}));function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function b(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,k(r.key),r)}}function _(e,t,n){return t&&h(e.prototype,t),n&&h(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function k(e){var t=function(e,t){if("object"!=g(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==g(t)?t:t+""}var x,S,w,B=function(){function e(){b(this,e)}return _(e,null,[{key:"Layout",value:function(e,t,n){var r=t?"fa-solid":"fa-regular",o=t?"opacity: 1;":"";return n?'\n                <div class="content__tasks-main__task" style="transition: 0.2 ease-in; background-color: transparent;">\n                    <div class="content__tasks-main__task-checkmark"><input type="checkbox" class="hide-check"><i class="fa-solid fa-circle-check check"></i></div>\n                    <p class="content__tasks-main__task-title" style="text-decoration: line-through; color: rgb(132, 132, 157);">'.concat(e,'</p>\n                    <div class="content__tasks-main__task-actions"><i class="options edit material-symbols-rounded" style="display:none; transition: all 0.2s ease-in-out 0s;">edit</i><i class="options delete material-symbols-rounded" style="display: flex; transition: all 0.2s ease-in-out 0s;">delete</i><i class="').concat(r,' fa-star" style="').concat(o,' transition: all 0.2s ease-in-out 0s; display:none;"></i></div>\n                </div>\n        '):'\n            <div class="content__tasks-main__task" style="transition: 0.2 ease-in;">\n                <div class="content__tasks-main__task-checkmark"><input type="checkbox" class="hide-check"><i class="fa-regular fa-circle check"></i></div>\n                <p class="content__tasks-main__task-title">'.concat(e,'</p>\n                <div class="content__tasks-main__task-actions"><i class="options edit material-symbols-rounded" style="transition: all 0.2s ease-in-out 0s;">edit</i><i class="options delete material-symbols-rounded" style="display: none; transition: all 0.2s ease-in-out 0s;">delete</i><i class="').concat(r,' fa-star" style="').concat(o,' transition: all 0.2s ease-in-out 0s;"></i></div>\n            </div>\n        ')}},{key:"LayoutContent",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",r="",o="",a="display: none;";""==e.note?r="display: none;":o="display: none;",e.starred&&(a="display: inline-block;");var i,s=[["inbox","All"],["","Starred"],["today","Today"],["date_range","Week"],["folder",n]];return i=1==t?'<i class="fa-solid fa-star" style="margin-right: 11px;"></i>':4==t?'<i class="material-symbols-rounded open-folder">'.concat(s[t][0],"</i>"):'<i class="material-symbols-rounded">'.concat(s[t][0],"</i>"),'\n            <div class="content__task-head">\n                '.concat(i,'\n                <p class="content__task-head__title">').concat(s[t][1],'</p>\n            </div>\n            <div class="content__task-title-head">\n                <h2 class="content__task-title-head__title">').concat(e.name,'</h2>\n                <i class="open-star fa-solid fa-star" style="').concat(a,'"></i>\n            </div>\n            <div class="content__task-main">\n                <hr class="note-line">\n                <p class="content__tasks-main__note" style="').concat(r,'">').concat(e.note,'</p>\n                <p id="open-note" style="text-align: center; ').concat(o,'">No note</p>\n            </div>\n            <div class="content__task-footer">\n                <button class="back-btn fa-sharp fa-solid fa-chevron-left" style="cursor: pointer;"></button>\n                <p class="content__task-footer__open-date" style="').concat(e.styleDate[1],'">').concat(e.styleDate[0],"</p>\n            </div>\n        ")}},{key:"RenderContent",value:function(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",a=document.querySelector("#app"),i=a.querySelector(".content__task");a.querySelectorAll(".content__tasks-main__task")[n].addEventListener("click",(function(){i.innerHTML="";var n=e.LayoutContent(t,r,o);i.insertAdjacentHTML("beforeend",n),E.close()}))}},{key:"Render",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=document.querySelector("#app").querySelector(".content__tasks-main"),o=l.getItem("tasks"),a=Object.keys(o);0!=a.length&&(r.innerHTML="",a.forEach((function(a,i){var s=e.Layout(o[a].name,o[a].starred,o[a].status);r.insertAdjacentHTML("beforeend",s),e.RenderContent(o[a],i,t,n),E.open(a,i),E.choose(a,i),E.edit(a,i),E.delete(a,i)})))}},{key:"getProps",value:function(e){return{taskBackgroudColor:e?"var(--component)":"transparent",checkmarkClass:e?["fa-solid","fa-circle-check","fa-circle","fa-regular"]:["fa-circle","fa-regular","fa-solid","fa-circle-check"],textColor:e?"var(--dk-text)":"rgb(132, 132, 157)",textFormat:e?"none":"line-through",penDisplay:e?"block":"none",starDisplay:e?"block":"none",trashDisplay:e?"none":"flex",trashOpacity:e?"0":"1"}}},{key:"closeFn",value:function(){var e=app.querySelector(".content__tasks"),t=app.querySelector(".content__task");l.setSetting("taskOpened",!1),t.style.animation="0.1s slideFromRight ease-out",setTimeout((function(){t.style.display="none",e.style.animation="0.1s slideFromLeft ease-out",e.style.display="flex"}),90),setTimeout((function(){t.style.animation="",e.style.animation=""}),350)}}])}();x=B,w=function(){l.setSetting("taskOpened",!0);var e=app.querySelector(".content__tasks"),t=app.querySelector(".content__task");e.style.animation="0.1s slideFromLeft ease-out reverse",setTimeout((function(){e.style.display="none",t.style.display="flex",t.style.animation="0.1s slideFromRight ease-out reverse"}),90),setTimeout((function(){e.style.animation="",t.style.animation=""}),350)},(S=k(S="openFn"))in x?Object.defineProperty(x,S,{value:w,enumerable:!0,configurable:!0,writable:!0}):x[S]=w;var E=function(){function e(){b(this,e)}return _(e,null,[{key:"close",value:function(){app.querySelector(".content__task").querySelector(".back-btn.fa-sharp.fa-solid.fa-chevron-left").addEventListener("click",(function(){B.closeFn()}))}},{key:"open",value:function(e,t){var n=app.querySelectorAll(".content__tasks-main__task"),r=l.getTask(e),o=n[t].querySelector(".delete");r.status?(n[t].removeEventListener("click",B.openFn),o.style.opacity="1"):(n[t].addEventListener("click",B.openFn),o.style.opacity="0")}},{key:"choose",value:function(e,t){var n=app.querySelectorAll(".content__tasks-main__task")[t],r=n.querySelector(".content__tasks-main__task-checkmark"),o=n.querySelector("i"),a=n.querySelector(".content__tasks-main__task-title"),i=n.querySelector(".edit"),s=n.querySelector(".fa-star"),A=n.querySelector(".delete");r.addEventListener("click",(function(t){var r=l.getTask(e),c=B.getProps(r.status);n.style.backgroundColor=c.taskBackgroudColor,o.classList.remove(c.checkmarkClass[0]),o.classList.remove(c.checkmarkClass[1]),o.classList.add(c.checkmarkClass[2]),o.classList.add(c.checkmarkClass[3]),a.style.color=c.textColor,a.style.textDecoration=c.textFormat,i.style.display=c.penDisplay,s.style.display=c.starDisplay,A.style.display=c.trashDisplay,A.style.opacity=c.trashOpacity,r.status?n.addEventListener("click",B.openFn):n.removeEventListener("click",B.openFn),r.status=!r.status,l.setTask(e,r),t.stopPropagation()}))}},{key:"chooseStar",value:function(){var e=app.querySelector(".add-star");e.addEventListener("click",(function(){e.classList.toggle("fa-solid"),e.classList.toggle("starred"),e.classList.toggle("fa-regular")}))}},{key:"checkDate",value:function(e){var t,n=new Date,r=n.getFullYear(),o=n.getMonth()+1,a=n.getDate();if(null!=e){t=e.split("-");var i=parseInt(t[0],10),s=parseInt(t[2],10),A=parseInt(t[1],10);return i<r||i===r&&A<o||i===r&&A===o&&s<a?["Past due","color: rgb(227, 74, 74);"]:i===r&&A===o&&s===a?[e,"color: rgb(227, 74, 74);"]:[e,""]}}},{key:"delete",value:function(t,n){var r=app.querySelectorAll(".content__tasks-main__task")[n];r.querySelector(".delete").addEventListener("click",(function(n){e.deleteFn(t,r,n)}))}},{key:"deleteFn",value:function(e,t,n){l.deleteTask(e),t.style.animation="0.2s slideFromLeft ease-out reverse",setTimeout((function(){t.parentNode.removeChild(t),0==app.querySelectorAll(".content__tasks-main__task").length&&app.querySelector(".content__tasks-main").insertAdjacentHTML("beforeend",'<p class="content__tasks-main__not-found">No tasks found</p>')}),200),n.stopPropagation()}},{key:"submitAdd",value:function(){var t=app.querySelector(".content__form-add-task"),n=t.querySelector(".back-btn");t.addEventListener("submit",(function(n){n.preventDefault();var r=new FormData(this),o=r.get("fname"),a=r.get("fnote"),i=r.get("fproject"),s=r.get("fdate"),A=t.querySelectorAll(".starred"),c=e.checkDate(s),d=new v(o,a,i,s,c,0!=A.length,!1);l.addTask(d),B.Render(),this.reset(),u.backFn(n)})),n.addEventListener("click",(function(e){e.preventDefault(),u.backFn(e),e.stopPropagation()}))}},{key:"edit",value:function(t,n){var r=this,o=app.querySelectorAll(".content__tasks-main__task")[n],a=app.querySelector(".content__form");o.querySelector(".edit").addEventListener("click",(function(n){l.setSetting("formOpened",!0);var o=l.getTask(t);a.innerHTML=u.Layout(o.starred,"Edit task",o.name,o.note,o.project,o.date,"Edit"),r.chooseStar();var i=a.querySelector("form"),s=i.querySelector(".back-btn");i.addEventListener("submit",(function(n){n.preventDefault();var r=new FormData(this),o=r.get("fname"),s=r.get("fnote"),A=r.get("fproject"),c=r.get("fdate"),d=i.querySelectorAll(".starred"),p=e.checkDate(c),f=new v(o,s,A,c,p,0!=d.length,!1);l.setTask(t,f),B.Render(),a.innerHTML=u.Layout(!1),e.submitAdd(),e.chooseStar(),u.backFn(n)})),s.addEventListener("click",(function(e){e.preventDefault(),u.backFn(e),e.stopPropagation()})),u.openFn(n),n.stopPropagation()}))}}])}();const j=B;var I;function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,J(r.key),r)}}function T(e,t,n){return t&&q(e.prototype,t),n&&q(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function F(e,t,n){return(t=J(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function J(e){var t=function(e,t){if("object"!=L(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==L(t)?t:t+""}var P=T((function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}));I=P,F(P,"openFn",(function(){var e=document.getElementById("app"),t=e.querySelector(".content"),n=e.querySelector(".title"),r=e.querySelector(".burger"),o=r.querySelectorAll("span")[0],a=r.querySelectorAll("span")[1],i=document.querySelector(".sidebar");o.style.transform="rotate(45deg)",a.style.transform="rotate(-45deg)",n.style.filter="blur(3px)",i.style.animation="0.15s slideFromLeft ease-in",i.style.display="flex",setTimeout((function(){i.style.animation=""}),160),t.style.display="none"})),F(P,"closeFn",(function(){var e=document.getElementById("app"),t=e.querySelector(".content"),n=e.querySelector(".title"),r=e.querySelector(".burger"),o=r.querySelectorAll("span")[0],a=r.querySelectorAll("span")[1],i=document.querySelector(".sidebar");o.style.transform="rotate(0)",o.style.transform="translateY(5px)",a.style.transform="rotate(0)",a.style.transform="translateY(-5px)",n.style.filter="blur(0)",i.style.animation="0.15s slideFromLeft ease-in reverse",setTimeout((function(){i.style.display="none"}),140),t.style.display="block"})),F(P,"initialize",(function(){var e=document.getElementById("app").querySelector(".burger"),t=!1;e.addEventListener("click",(function(){(t=!t)?I.openFn():I.closeFn()}))}));const O=P;function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,W(r.key),r)}}function W(e){var t=function(e,t){if("object"!=D(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:t+""}const R=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return t=e,n=[{key:"isInCurrentWeek",value:function(e){var t=new Date(e),n=new Date;if(n.getFullYear()>t.getFullYear()||n.getMonth()>t.getMonth())return!1;var r=t.getDate(),o=n.getDate()+1-(0==n.getDay()?7:n.getDay());return o<=r&&r<=o+6}},{key:"filterOn",value:function(e,t){e.forEach((function(e){var n=e.querySelector("p").innerHTML;t.includes(n)&&(e.style.display="none")}))}},{key:"filterOff",value:function(e){e.forEach((function(e){e.style.display="flex"}))}},{key:"filterTasks",value:function(t,n,r){var o=4==n?t.querySelector("p").innerHTML:t.innerHTML;j.Render(n,o);var a=app.querySelectorAll(".folder.fa-solid");0!=a.length&&(a[0].classList.add("fa-regular"),a[0].classList.remove("fa-solid")),l.getSetting("formOpened")?u.backFn(r):l.getSetting("taskOpened")&&j.closeFn(),app.querySelector(".content__task").style.display="none";var i=app.querySelectorAll(".content__tasks-main__task");e.filterOff(i);var s=app.querySelector(".selectedFilter");s&&s.classList.remove("selectedFilter"),t.classList.add("selectedFilter");var A=l.getItem("tasks"),c=Object.values(A),d=[];if(0==n)d=[];else if(1==n)d=c.filter((function(e){return!e.starred}));else if(2==n)d=c.filter((function(e){return!("Past due"!=e.styleDate[0]&&"color: rgb(227, 74, 74);"==e.styleDate[1])}));else if(3==n)d=c.filter((function(t){return!e.isInCurrentWeek(t.date)}));else{o=t.querySelector("p").innerHTML;var p=t.querySelector(".folder");p.classList.remove("fa-regular"),p.classList.add("fa-solid"),d=c.filter((function(e){return!(o==e.project)}))}var f=d.map((function(e){return e.name}));f.length==c.length&&(app.querySelector(".content__tasks-main").innerHTML='<p class="content__tasks-main__not-found">No tasks found</p>'),e.filterOn(i,f)}},{key:"filters",value:function(){var t,n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];(function(e){if(Array.isArray(e))return z(e)}(t=app.querySelectorAll(".filter"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||function(e,t){if(e){if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(e,t):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).forEach((function(t,r){t.addEventListener("click",(function(o){n&&O.closeFn(),e.filterTasks(t,r,o)}))}))}}],null&&Y(t.prototype,null),n&&Y(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n}();function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,H(r.key),r)}}function G(e,t,n){return t&&N(e.prototype,t),n&&N(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function H(e){var t=function(e,t){if("object"!=M(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=M(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==M(t)?t:t+""}const U=G((function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.index=n}));function K(e){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},K(e)}function Q(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function X(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,V(r.key),r)}}function Z(e,t,n){return t&&X(e.prototype,t),n&&X(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function V(e){var t=function(e,t){if("object"!=K(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=K(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==K(t)?t:t+""}var $=function(){function e(){Q(this,e)}return Z(e,null,[{key:"formLayout",value:function(){return'\n        <div class="projects__list__formProject" style="margin-bottom: 8px">\n            <input type="text" autocomplete="off" id="fpname" class="projects__list_formProject-input" required minlength="1">\n        </div>\n        '}},{key:"filterLayout",value:function(e){return'\n        <div class="projects__list__project filter">\n            <i class="folder fa-regular fa-folder"></i>\n            <p class="projects__list__project-name">'.concat(e,'</p>\n            <div class="projects__list__project-btns">\n                <i class="options edit-p material-symbols-rounded">edit</i>\n                <i class="options delete-p material-symbols-rounded">delete</i>\n            </div>\n        </div>\n        ')}},{key:"Render",value:function(){var t=l.getItem("projects"),n=Object.keys(t),r=app.querySelector(".projects__list");n.forEach((function(n,o){r.insertAdjacentHTML("afterbegin",e.filterLayout(t[n].name));var a=app.querySelectorAll(".projects__list__project")[0],i=a.querySelector(".edit-p"),s=a.querySelector(".delete-p");a.addEventListener("click",(function(e){R.filterTasks(a,t[n].index,e)})),i.addEventListener("click",(function(e){ee.editFn(a,e,o)})),s.addEventListener("click",(function(e){ee.deleteFn(e)}));var A=document.getElementById("fproject"),l=document.createElement("option");l.text=t[n].name,l.value=t[n].name,A.appendChild(l)}))}}])}(),ee=function(){function e(){Q(this,e)}return Z(e,null,[{key:"statusEditOrAdd",value:function(e,t,n){e&&(e.classList.toggle("fa-solid"),e.classList.toggle("fa-regular")),t&&t.classList.toggle("selectedFilter"),n.classList.toggle("plus"),n.classList.toggle("rotated")}},{key:"add",value:function(){var t=app.querySelector(".fa-plus");t.addEventListener("click",(function(n){var r=app.querySelector(".selectedFilter"),o=app.querySelector(".folder.fa-solid"),a=app.querySelector(".projects__list"),i=app.querySelector(".projects__list__formProject");e.statusEditOrAdd(o,r,t);var s=function(){i.parentNode.removeChild(i),r.classList.add("selectedFilter");var e=r.querySelector(".folder");e&&(e.classList.toggle("fa-solid"),e.classList.toggle("fa-regular")),t.classList.add("plus"),t.classList.remove("rotated"),document.removeEventListener("click",A)},A=function(e){var n=app.querySelectorAll(".rotated");if(t.contains(e.target)&&0==n.length)s();else if(i.contains(e.target)){if(i.contains(e.target))return}else s()};i||(a.insertAdjacentHTML("afterbegin",$.formLayout()),i=app.querySelector(".projects__list__formProject"),document.querySelectorAll(".projects__list__project").forEach((function(e){e.style.animation="0.2s slideFromTop ease-out",setTimeout((function(){e.style.animation=""}),1900)})),i.style.animation="0.2s slideFromTop ease-out",setTimeout((function(){i.style.animation=""}),1900),i.querySelector("input").focus(),document.removeEventListener("click",A),document.addEventListener("click",A),i.addEventListener("keydown",(function(n){if("Enter"===n.key){var r=i.querySelector("input").value;a.insertAdjacentHTML("afterbegin",$.filterLayout(r));var o=document.querySelectorAll(".projects__list__project"),s=o.length-1,c=new U(r,s);l.addProject(c),t.classList.toggle("plus"),t.classList.toggle("rotated"),document.removeEventListener("click",A),i.parentNode.removeChild(i);var d=document.getElementById("fproject"),p=document.createElement("option");p.text=r,p.value=r,d.appendChild(p);var u=o[0];u.classList.add("selectedFilter"),u.classList.add("filter");var f=u.querySelector("i"),m=u.querySelector(".edit-p"),y=u.querySelector(".delete-p");f.classList.remove("fa-regular"),f.classList.add("fa-solid"),R.filterTasks(u,c.ind,n),u.addEventListener("click",(function(e){R.filterTasks(u,c.ind,e)})),y.addEventListener("click",(function(t){e.deleteFn(t)})),m.addEventListener("click",(function(t){e.editFn(u,t,c.ind)}))}}))),n.stopPropagation()}))}},{key:"deleteFn",value:function(e){var t=e.target.parentNode.parentNode,n=t.querySelector("p").innerHTML;l.deleteProject(n);var r=Array.from(app.querySelectorAll("option")).filter((function(e){return e.innerHTML==n}))[0].value;app.querySelector('option[value="'.concat(r,'"]')).remove(),t.style.animation="0.2s slideFromLeft ease-out reverse",setTimeout((function(){t.parentNode.removeChild(t);var n=app.querySelector(".filter.all");R.filterTasks(n,0,e)}),190),e.stopPropagation()}},{key:"editFn",value:function(t,n,r){var o=t.querySelector("p").innerHTML,a=document.createElement("form");a.classList.add("projects__list__formProject"),a.style.marginBottom="8px",a.style.animation="0.2s showIn ease-out",a.innerHTML='\n            <input type="text" autocomplete="off" id="fpname" class="projects__list_formProject-input" minlength="1" required value="'.concat(o,'">\n        '),t.replaceWith(a),a.querySelector("input").focus();var i=app.querySelector(".folder.fa-solid"),s=app.querySelector(".selectedFilter"),A=app.querySelector(".fa-plus");e.statusEditOrAdd(i,s,A);var c=function(){if(a.replaceWith(t),s){s.classList.add("selectedFilter");var e=s.querySelector(".folder");e&&(e.classList.toggle("fa-solid"),e.classList.toggle("fa-regular"))}A.classList.add("plus"),A.classList.remove("rotated"),document.removeEventListener("click",d)},d=function(e){var t=app.querySelectorAll(".rotated");if(A.contains(e.target)&&0==t.length)c();else if(a.contains(e.target)){if(a.contains(e.target))return}else c()};document.removeEventListener("click",d),document.addEventListener("click",d),a.addEventListener("keydown",(function(t){if("Enter"===t.key){var n=a.querySelector("input").value,i=document.createElement("div");i.classList.add("projects__list__project","filter","selectedFilter"),i.innerHTML='\n                    <i class="folder fa-solid fa-folder"></i>\n                    <p class="projects__list__project-name">'.concat(n,'</p>\n                    <div class="projects__list__project-btns">\n                        <i class="options edit-p material-symbols-rounded">edit</i>\n                        <i class="options delete-p material-symbols-rounded">delete</i>\n                    </div>\n                '),a.replaceWith(i),A.classList.toggle("plus"),A.classList.toggle("rotated");var s=new U(n,r);l.deleteProject(o),l.addProject(s),document.removeEventListener("click",d);var c=Array.from(app.querySelectorAll("option")).filter((function(e){return e.innerHTML==o})),p=document.createElement("option");p.text=n,p.value=n,c[0].replaceWith(p),R.filterTasks(i,s.ind,t);var u=i.querySelector(".delete-p"),f=i.querySelector(".edit-p");i.addEventListener("click",(function(e){R.filterTasks(i,s.ind,e)})),u.addEventListener("click",(function(t){e.deleteFn(t)})),f.addEventListener("click",(function(t){e.editFn(i,t,s.index)}))}})),n.stopPropagation()}}])}();const te=$;function ne(e){return ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ne(e)}function re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,oe(r.key),r)}}function oe(e){var t=function(e,t){if("object"!=ne(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=ne(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ne(t)?t:t+""}const ae=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.app=document.querySelector(t)},t=[{key:"Theme",value:function(){var e=app.querySelector(".theme");e.addEventListener("click",(function(){var t=document.documentElement.getAttribute("data-theme"),n="light"==t?"dark":"light";e.innerHTML="light"==t?"toggle_on":"toggle_off",document.documentElement.setAttribute("data-theme",n),l.setSetting("theme",n)}))}},{key:"Filters",value:function(){var e=window.innerWidth<=480;R.filters(e)}},{key:"Tasks",value:function(){E.chooseStar(),E.submitAdd()}},{key:"Projects",value:function(){ee.add()}},{key:"Burger",value:function(){O.initialize()}}],null&&re(e.prototype,null),t&&re(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function ie(e){return ie="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ie(e)}function se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Ae(r.key),r)}}function Ae(e){var t=function(e,t){if("object"!=ie(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=ie(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ie(t)?t:t+""}const le=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)},t=[{key:"Layout",value:function(){o.SetLayout()}},{key:"render",value:function(){u.RenderView(),j.Render(),te.Render()}},{key:"loadSettings",value:function(){l.setTheme()}},{key:"addHandlers",value:function(){ae.Theme(),ae.Filters(),ae.Tasks(),ae.Projects(),ae.Burger()}}],null&&se(e.prototype,null),t&&se(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();var ce=n(72),de=n.n(ce),pe=n(825),ue=n.n(pe),fe=n(659),me=n.n(fe),ye=n(56),Ce=n.n(ye),ve=n(540),ge=n.n(ve),be=n(113),he=n.n(be),_e=n(100),ke={};ke.styleTagTransform=he(),ke.setAttributes=Ce(),ke.insert=me().bind(null,"head"),ke.domAPI=ue(),ke.insertStyleElement=ge(),de()(_e.A,ke),_e.A&&_e.A.locals&&_e.A.locals,le.Layout(),le.render(),le.loadSettings(),le.addHandlers()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,